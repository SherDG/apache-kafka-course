START KAFKA BROKER for Kafka 4
cd ~/kafka/kafka_2.13-4.0.0

# Generate a cluster ID if needed (you can use the same ID each time)
CLUSTER_ID=$(bin/kafka-storage.sh random-uuid)

# Format the storage
bin/kafka-storage.sh format -t $CLUSTER_ID -c config/kraft/server.properties

# Start the Kafka server
bin/kafka-server-start.sh config/kraft/server.properties

# Step 1: Create the topic with desired configuration
bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --replication-factor 1 --partitions 3 --topic test

# Step 2: Produce messages to the topic
bin/kafka-console-producer.sh --bootstrap-server localhost:9092 --topic test

Logs
/home/dima/kafka/kafka_2.13-4.0.0/logs
e.g. - /home/dima/kafka/kafka_2.13-4.0.0/logs/kafka-server-2.log
tail -f logs/server.log

# Monitor server logs in real-time
tail -f logs/server.log

# Monitor specific topic partition logs
tail -f logs/animals-0/*.log

LIST TOPICS
bin/kafka-topics.sh \
--bootstrap-server localhost:9092 \
--list

TOPIC DETAILS
bin/kafka-topics.sh \
--bootstrap-server localhost:9092 \
--describe \
--topic test

START CONSOLE CONSUMER
bin/kafka-console-consumer.sh \
--bootstrap-server localhost:9092 \
--topic test

START CONSOLE CONSUMER AND READ MESSAGES FROM BEGINNING
bin/kafka-console-consumer.sh \
--bootstrap-server localhost:9092 \
--topic test \
--from-beginning

START CONSOLE CONSUMER WITH SPECIFIC CONSUMER GROUP
bin/kafka-console-consumer.sh \
--bootstrap-server localhost:9092 \
--topic test \
--group test \
--from-beginning

LIST CONSUMER GROUPS
bin/kafka-consumer-groups.sh \
--bootstrap-server localhost:9092 \
--list

CONSUMER GROUP DETAILS
bin/kafka-consumer-groups.sh \
--bootstrap-server localhost:9092 \
--group test \
--describe